package com.hit.server;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Struct;
import java.util.ArrayList;

import com.hit.services.CacheUnitController;

public class Server implements PropertyChangeListener, Runnable {

	private class User {
		String Name;
		Integer ID;
		String Status;
		
		public User(String name, int id, String status) {
			this.Name = name;
			this.ID = id;
			this.Status = status;
		}
	}

	private static final int SERVER = 12345;

	private static int USERID = 1;
	
	private Thread thread;
	private String command;
	private String User;
	private Integer ID;
	private ServerSocket listener;
	private Socket client;
	private ArrayList<User> usersList = new ArrayList<User>();

	public Server() {
		try {
			listener = new ServerSocket(SERVER);
		} catch (Exception e) {
			System.out.println("error");
		}
	}

	@Override
	public void run() {
		System.out.println("server started");
		try {
			while (true) {
				client = listener.accept();
				HandleRequest<Request> request = new HandleRequest<Request>(client, new CacheUnitController<Request>());
				System.out.println("New client connected.");
				thread = new Thread(request);
				thread.start();
			}
		} catch (IOException e) {
			System.out.println("Cannot connect.");
		} catch (Exception e) {
			System.out.println("Some error occured.");
		}
	}

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if (evt.getClass().equals(User)) {
			for (User user : usersList) {
				if (user.Name.equals(evt.getPropertyName())) {
					user.Status = (String) evt.getNewValue();
				}
			}
			User user = new User(evt.getPropertyName(), USERID++, (String)evt.getNewValue());
		}
	}

}